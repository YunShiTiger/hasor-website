<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sp_project_version_space">

    <resultMap id="projectVersionDOMap" type="net.hasor.website.domain.ProjectVersionDO">
        <result property="id"               column="id"/>
        <result property="projectID"        column="project_id"/>
        <result property="releaseTime"      column="release_time"/>
        <result property="version"          column="version"/>
        <result property="status"           column="status"           typeHandler="net.hasor.website.datadao.convert.VersionStatusConvert"/>
        <result property="subtitle"         column="subtitle"/>
        <result property="changelog"        column="changelog"/>
        <result property="changelogFormat"  column="changelog_format" typeHandler="net.hasor.website.datadao.convert.ContentFormatConvert"/>
        <result property="futures"          column="futures"          typeHandler="net.hasor.website.datadao.convert.ProjectVersionFuturesConvert"/>
        <result property="createTime"       column="create_time"/>
        <result property="modifyTime"       column="modify_time"/>
    </resultMap>

    <sql id="projectVersionDO_allColumns">
        id,
        project_id,
        release_time,
        version,
        status,
        subtitle,
        changelog,
        changelog_format,
        futures,
        create_time,
        modify_time
	</sql>

    <!-- 新版本 -->
    <insert id="projectVersion_insert" parameterType="net.hasor.website.domain.ProjectVersionDO">
        insert into PROJECT_VERSION(
            project_id,
            release_time,
            version,
            status,
            subtitle,
            changelog,
            changelog_format,
            futures,
            create_time,
            modify_time
        ) values(
            #{projectID},
            #{releaseTime},
            #{version},
            #{status,          typeHandler=net.hasor.website.datadao.convert.VersionStatusConvert},
            #{subtitle},
            #{changelog},
            #{changelogFormat, typeHandler=net.hasor.website.datadao.convert.ContentFormatConvert},
            #{futures,         typeHandler=net.hasor.website.datadao.convert.ProjectFuturesConvert},
            now(),
            now()
        );
        <selectKey keyProperty="id" resultType="long">
            select LAST_INSERT_ID() as value
        </selectKey>
    </insert>

    <!-- 根据项目owner获取项目列表 -->
    <select id="projectVersion_queryByProject" resultMap="projectVersionDOMap">
        select
            <include refid="projectVersionDO_allColumns"/>
        from
            PROJECT_VERSION
        where 1=1
            and project_id = #{projectID}
            and status    != 4
        order by
            release_time desc
    </select>

    <!-- 查询项目版本 -->
    <select id="projectVersion_queryByID" resultMap="projectVersionDOMap">
        select
            <include refid="projectVersionDO_allColumns"/>
        from
            PROJECT_VERSION
        where 1=1
            and id         = #{versionID}
            and project_id = #{projectID}
        limit
            1
    </select>

    <!-- 更新项目版本信息，不会变更版本状态和隶属关系。 -->
    <update id="projectVersion_updateVersion">
        update PROJECT_VERSION set
            release_time    = #{releaseTime},
            version         = #{version},
            subtitle        = #{subtitle},
            changelog       = #{changelog},
            changelog_format= #{changelogFormat,typeHandler=net.hasor.website.datadao.convert.ContentFormatConvert},
            futures         = #{futures,typeHandler=net.hasor.website.datadao.convert.ProjectFuturesConvert},
            modify_time     = now()
        where 1=1
            and id          = #{id}
            and project_id  = #{projectID}
        limit 1
    </update>

    <!-- 更新状态和扩展字段。 -->
    <update id="projectVersion_updateStatusAndFutures">
        update PROJECT_VERSION set
            status        = #{versionInfo.status,typeHandler=net.hasor.website.datadao.convert.VersionStatusConvert},
            futures       = #{versionInfo.futures,typeHandler=net.hasor.website.datadao.convert.ProjectFuturesConvert},
            modify_time   = now()
        where 1=1
            and id          = #{versionInfo.id}
            and project_id  = #{projectID}
        limit 1
    </update>

    <!-- 更新状态。 -->
    <update id="projectVersion_updateStatus">
        update PROJECT_VERSION set
            status        = #{versionInfo.status,typeHandler=net.hasor.website.datadao.convert.VersionStatusConvert},
            modify_time   = now()
        where 1=1
            and id          = #{versionInfo.id}
            and project_id  = #{projectID}
        limit 1
    </update>


</mapper>