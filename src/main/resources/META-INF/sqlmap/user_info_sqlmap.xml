<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sp_user_space">
    
    <resultMap id="userDOMap" type="net.demo.hasor.domain.UserDO">
        <result property="userID"           column="id"/>
        <result property="account"          column="account"/>
        <result property="email"            column="email"/>
        <result property="mobilePhone"      column="mobile_phone"/>
        <result property="password"         column="password"/>
        <result property="type"             column="type"           typeHandler="net.demo.hasor.domain.convert.UserTypeConvert"/>

        <result property="nick"             column="nick"/>
        <result property="gender"           column="gender"         typeHandler="net.demo.hasor.domain.convert.GenderTypeConvert"/>
        <result property="avatar"           column="avatar"/>

        <result property="contactInfo"      column="contact_info"   typeHandler="net.demo.hasor.domain.convert.UserContactInfoConvert"/>
        <result property="futures"          column="futures"        typeHandler="net.demo.hasor.domain.convert.UserFuturesConvert"/>
        <result property="status"           column="status"         typeHandler="net.demo.hasor.domain.convert.UserStatusConvert"/>
        <result property="loginCount"       column="login_count"/>
        
        <result property="firstLoginTime"   column="first_login_time"/>
        <result property="lastLoginTime"    column="last_login_time"/>
        <result property="createTime"       column="create_time"/>
        <result property="modifyTime"       column="modify_time"/>
    </resultMap>

    <sql id="userDO_allColumns">
        id,
        account,
        email,
        mobile_phone,
        password,
        type,
        nick,
        gender,
        avatar,
        contact_info,
        futures,
        status,
        login_count,
        first_login_time,
        last_login_time,
        create_time,
        modify_time
	</sql>
    
    <!-- 新增用户 -->
    <insert id="user_insert" parameterType="net.demo.hasor.domain.UserDO">
        insert into USER_INFO(
            account,
            email,
            mobile_phone,
            password,
            type,
            nick,
            gender,
            avatar,
            contact_info,
            futures,
            status,
            login_count,
            create_time,
            modify_time
        ) values(
            #{account},
            #{email},
            #{mobilePhone},
            #{password},
            #{type, typeHandler=net.demo.hasor.domain.convert.UserTypeConvert},
            #{nick},
            #{gender, typeHandler=net.demo.hasor.domain.convert.GenderTypeConvert},
            #{avatar},
            #{contactInfo, typeHandler=net.demo.hasor.domain.convert.UserContactInfoConvert},
            #{futures, typeHandler=net.demo.hasor.domain.convert.UserFuturesConvert},
            #{status, typeHandler=net.demo.hasor.domain.convert.UserStatusConvert},
            0,
            now(),
            now()
        );
        <selectKey keyProperty="userID" resultType="long">
            select LAST_INSERT_ID() as value
        </selectKey>
    </insert>
    
    <!-- 更新用户数据 -->
    <update id="user_updateInfo">
        update USER_INFO set
            nick          = #{userInfo.nick},
            gender        = #{userInfo.gender, typeHandler=net.demo.hasor.domain.convert.GenderTypeConvert},
            avatar        = #{userInfo.avatar},
            contact_info  = #{userInfo.contactInfo, typeHandler=net.demo.hasor.domain.convert.UserContactInfoConvert},
            futures       = #{userInfo.futures, typeHandler=net.demo.hasor.domain.convert.UserFuturesConvert},
            status        = #{userInfo.status, typeHandler=net.demo.hasor.domain.convert.UserStatusConvert},
            type          = #{userInfo.type, typeHandler=net.demo.hasor.domain.convert.UserTypeConvert},
            modify_time   = now()
        where 
            id = #{userID} and status = 0
        limit 1
    </update>

    <!-- 登录 -->
    <update id="user_loginUpdate">
        update USER_INFO set
            login_count       = login_count + 1,
            first_login_time  = ifnull( first_login_time , now() ),
            last_login_time   = now(),
            modify_time       = now()
        where
            id = #{userID} and status = 0
        limit 1
    </update>

    <!-- 根据ID查询 -->
    <select id="user_queryById" resultMap="userDOMap">
        select
            <include refid="userDO_allColumns"/>
        from
            USER_INFO
        where
            id = #{userID}
        limit 1
    </select>

</mapper>