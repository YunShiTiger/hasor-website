<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sp_user_source_space">

    <resultMap id="userSourceDOMap" type="net.demo.hasor.domain.UserSourceDO">
        <result property="sourceID"         column="id"/>
        <result property="provider"         column="provider"/>
        <result property="uniqueID"         column="unique_id"/>
        <result property="userID"           column="user_id"/>
        <result property="status"           column="status"/>
        <result property="accessInfo"       column="access_info"    typeHandler="net.demo.hasor.datadao.convert.AccessInfoConvert"/>
        <result property="loginCount"       column="login_count"/>
        <result property="firstLoginTime"   column="first_login_time"/>
        <result property="lastLoginTime"    column="last_login_time"/>
        <result property="createTime"       column="create_time"/>
        <result property="modifyTime"       column="modify_time"/>
    </resultMap>

    <sql id="userSourceDO_allColumns">
        id,
        provider,
        unique_id,
        user_id,
        status,
        access_info,
        login_count,
        first_login_time,
        last_login_time,
        create_time,
        modify_time
	</sql>

    <!-- 新增外部登录 -->
    <insert id="userSource_insert" parameterType="net.demo.hasor.domain.UserSourceDO">
        insert into USER_SOURCE(
            provider,
            unique_id,
            user_id,
            status,
            access_info,
            login_count,
            create_time,
            modify_time
        ) values(
            #{provider},
            #{uniqueID},
            #{userID},
            #{status},
            #{accessInfo, typeHandler=net.demo.hasor.datadao.convert.AccessInfoConvert},
            #{loginCount},
            now(),
            now()
        );
        <selectKey keyProperty="sourceID" resultType="long">
            select LAST_INSERT_ID() as value
        </selectKey>
    </insert>

    <!-- 登录 -->
    <update id="userSource_loginUpdateByUserID">
        update USER_SOURCE set
            login_count       = login_count + 1,
            first_login_time  = ifnull( first_login_time , now() ),
            last_login_time   = now(),
            modify_time       = now()
        where
            provider = #{provider} and user_id = #{userID} and status = 1
        limit 1
    </update>
    
    <!-- 更新外部登录信息 -->
    <update id="userSource_updateInfo">
        update USER_SOURCE set
            unique_id     = #{sourceInfo.uniqueID},
            status        = #{sourceInfo.status},
            access_info   = #{sourceInfo.accessInfo, typeHandler=net.demo.hasor.datadao.convert.AccessInfoConvert},
            modify_time   = now()
        where 
            provider = #{provider} and user_id = #{userID}
        limit 1
    </update>

    <!-- 根据提供者和外部ID获取登录信息 -->
    <select id="userSource_queryByUnique" resultMap="userSourceDOMap">
        select
            <include refid="userSourceDO_allColumns"/>
        from
            USER_SOURCE
        where
            provider = #{provider} and unique_id = #{uniqueID}
        limit 1
    </select>

    <!-- 根据用户ID获取关联的外部登录帐号 -->
    <select id="userSource_queryListByUserID" resultMap="userSourceDOMap">
        select
            <include refid="userSourceDO_allColumns"/>
        from
            USER_SOURCE
        where
            user_id = #{userID}
    </select>
</mapper>